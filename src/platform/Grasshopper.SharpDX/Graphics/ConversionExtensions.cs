using Grasshopper.Graphics.Materials;
using SharpDX.DXGI;

namespace Grasshopper.SharpDX.Graphics
{
    static class ConversionExtensions
    {
        public static Format ToDXGIFormat(this PixelFormat format)
        {
            switch(format)
            {
                default: return Format.Unknown;
                //case PixelFormat.R32G32B32A32_Typeless: return Format.R32G32B32A32_Typeless;
                case PixelFormat.R32G32B32A32_Float: return Format.R32G32B32A32_Float;
                //case PixelFormat.R32G32B32A32_UInt: return Format.R32G32B32A32_UInt;
                //case PixelFormat.R32G32B32A32_SInt: return Format.R32G32B32A32_SInt;
                //case PixelFormat.R32G32B32_Typeless: return Format.R32G32B32_Typeless;
                //case PixelFormat.R32G32B32_Float: return Format.R32G32B32_Float;
                //case PixelFormat.R32G32B32_UInt: return Format.R32G32B32_UInt;
                //case PixelFormat.R32G32B32_SInt: return Format.R32G32B32_SInt;
                //case PixelFormat.R16G16B16A16_Typeless: return Format.R16G16B16A16_Typeless;
                //case PixelFormat.R16G16B16A16_Float: return Format.R16G16B16A16_Float;
                //case PixelFormat.R16G16B16A16_UNorm: return Format.R16G16B16A16_UNorm;
                //case PixelFormat.R16G16B16A16_UInt: return Format.R16G16B16A16_UInt;
                //case PixelFormat.R16G16B16A16_SNorm: return Format.R16G16B16A16_SNorm;
                //case PixelFormat.R16G16B16A16_SInt: return Format.R16G16B16A16_SInt;
                //case PixelFormat.R32G32_Typeless: return Format.R32G32_Typeless;
                //case PixelFormat.R32G32_Float: return Format.R32G32_Float;
                //case PixelFormat.R32G32_UInt: return Format.R32G32_UInt;
                //case PixelFormat.R32G32_SInt: return Format.R32G32_SInt;
                //case PixelFormat.R32G8X24_Typeless: return Format.R32G8X24_Typeless;
                //case PixelFormat.D32_Float_S8X24_UInt: return Format.D32_Float_S8X24_UInt;
                //case PixelFormat.R32_Float_X8X24_Typeless: return Format.R32_Float_X8X24_Typeless;
                //case PixelFormat.X32_Typeless_G8X24_UInt: return Format.X32_Typeless_G8X24_UInt;
                //case PixelFormat.R10G10B10A2_Typeless: return Format.R10G10B10A2_Typeless;
                //case PixelFormat.R10G10B10A2_UNorm: return Format.R10G10B10A2_UNorm;
                //case PixelFormat.R10G10B10A2_UInt: return Format.R10G10B10A2_UInt;
                //case PixelFormat.R11G11B10_Float: return Format.R11G11B10_Float;
                //case PixelFormat.R8G8B8A8_Typeless: return Format.R8G8B8A8_Typeless;
                case PixelFormat.R8G8B8A8_UNorm: return Format.R8G8B8A8_UNorm;
                //case PixelFormat.R8G8B8A8_UNorm_SRgb: return Format.R8G8B8A8_UNorm_SRgb;
                //case PixelFormat.R8G8B8A8_UInt: return Format.R8G8B8A8_UInt;
                //case PixelFormat.R8G8B8A8_SNorm: return Format.R8G8B8A8_SNorm;
                //case PixelFormat.R8G8B8A8_SInt: return Format.R8G8B8A8_SInt;
                //case PixelFormat.R16G16_Typeless: return Format.R16G16_Typeless;
                //case PixelFormat.R16G16_Float: return Format.R16G16_Float;
                //case PixelFormat.R16G16_UNorm: return Format.R16G16_UNorm;
                //case PixelFormat.R16G16_UInt: return Format.R16G16_UInt;
                //case PixelFormat.R16G16_SNorm: return Format.R16G16_SNorm;
                //case PixelFormat.R16G16_SInt: return Format.R16G16_SInt;
                //case PixelFormat.R32_Typeless: return Format.R32_Typeless;
                //case PixelFormat.D32_Float: return Format.D32_Float;
                //case PixelFormat.R32_Float: return Format.R32_Float;
                //case PixelFormat.R32_UInt: return Format.R32_UInt;
                //case PixelFormat.R32_SInt: return Format.R32_SInt;
                //case PixelFormat.R24G8_Typeless: return Format.R24G8_Typeless;
                //case PixelFormat.D24_UNorm_S8_UInt: return Format.D24_UNorm_S8_UInt;
                //case PixelFormat.R24_UNorm_X8_Typeless: return Format.R24_UNorm_X8_Typeless;
                //case PixelFormat.X24_Typeless_G8_UInt: return Format.X24_Typeless_G8_UInt;
                //case PixelFormat.R8G8_Typeless: return Format.R8G8_Typeless;
                //case PixelFormat.R8G8_UNorm: return Format.R8G8_UNorm;
                //case PixelFormat.R8G8_UInt: return Format.R8G8_UInt;
                //case PixelFormat.R8G8_SNorm: return Format.R8G8_SNorm;
                //case PixelFormat.R8G8_SInt: return Format.R8G8_SInt;
                //case PixelFormat.R16_Typeless: return Format.R16_Typeless;
                //case PixelFormat.R16_Float: return Format.R16_Float;
                //case PixelFormat.D16_UNorm: return Format.D16_UNorm;
                //case PixelFormat.R16_UNorm: return Format.R16_UNorm;
                //case PixelFormat.R16_UInt: return Format.R16_UInt;
                //case PixelFormat.R16_SNorm: return Format.R16_SNorm;
                //case PixelFormat.R16_SInt: return Format.R16_SInt;
                //case PixelFormat.R8_Typeless: return Format.R8_Typeless;
                //case PixelFormat.R8_UNorm: return Format.R8_UNorm;
                //case PixelFormat.R8_UInt: return Format.R8_UInt;
                //case PixelFormat.R8_SNorm: return Format.R8_SNorm;
                //case PixelFormat.R8_SInt: return Format.R8_SInt;
                //case PixelFormat.A8_UNorm: return Format.A8_UNorm;
                //case PixelFormat.R1_UNorm: return Format.R1_UNorm;
                //case PixelFormat.R9G9B9E5_Sharedexp: return Format.R9G9B9E5_Sharedexp;
                //case PixelFormat.R8G8_B8G8_UNorm: return Format.R8G8_B8G8_UNorm;
                //case PixelFormat.G8R8_G8B8_UNorm: return Format.G8R8_G8B8_UNorm;
                //case PixelFormat.BC1_Typeless: return Format.BC1_Typeless;
                //case PixelFormat.BC1_UNorm: return Format.BC1_UNorm;
                //case PixelFormat.BC1_UNorm_SRgb: return Format.BC1_UNorm_SRgb;
                //case PixelFormat.BC2_Typeless: return Format.BC2_Typeless;
                //case PixelFormat.BC2_UNorm: return Format.BC2_UNorm;
                //case PixelFormat.BC2_UNorm_SRgb: return Format.BC2_UNorm_SRgb;
                //case PixelFormat.BC3_Typeless: return Format.BC3_Typeless;
                //case PixelFormat.BC3_UNorm: return Format.BC3_UNorm;
                //case PixelFormat.BC3_UNorm_SRgb: return Format.BC3_UNorm_SRgb;
                //case PixelFormat.BC4_Typeless: return Format.BC4_Typeless;
                //case PixelFormat.BC4_UNorm: return Format.BC4_UNorm;
                //case PixelFormat.BC4_SNorm: return Format.BC4_SNorm;
                //case PixelFormat.BC5_Typeless: return Format.BC5_Typeless;
                //case PixelFormat.BC5_UNorm: return Format.BC5_UNorm;
                //case PixelFormat.BC5_SNorm: return Format.BC5_SNorm;
                //case PixelFormat.B5G6R5_UNorm: return Format.B5G6R5_UNorm;
                //case PixelFormat.B5G5R5A1_UNorm: return Format.B5G5R5A1_UNorm;
                //case PixelFormat.B8G8R8A8_UNorm: return Format.B8G8R8A8_UNorm;
                //case PixelFormat.B8G8R8X8_UNorm: return Format.B8G8R8X8_UNorm;
                //case PixelFormat.R10G10B10_Xr_Bias_A2_UNorm: return Format.R10G10B10_Xr_Bias_A2_UNorm;
                //case PixelFormat.B8G8R8A8_Typeless: return Format.B8G8R8A8_Typeless;
                //case PixelFormat.B8G8R8A8_UNorm_SRgb: return Format.B8G8R8A8_UNorm_SRgb;
                //case PixelFormat.B8G8R8X8_Typeless: return Format.B8G8R8X8_Typeless;
                //case PixelFormat.B8G8R8X8_UNorm_SRgb: return Format.B8G8R8X8_UNorm_SRgb;
                //case PixelFormat.BC6H_Typeless: return Format.BC6H_Typeless;
                //case PixelFormat.BC6H_Uf16: return Format.BC6H_Uf16;
                //case PixelFormat.BC6H_Sf16: return Format.BC6H_Sf16;
                //case PixelFormat.BC7_Typeless: return Format.BC7_Typeless;
                //case PixelFormat.BC7_UNorm: return Format.BC7_UNorm;
                //case PixelFormat.BC7_UNorm_SRgb: return Format.BC7_UNorm_SRgb;
                //case PixelFormat.AYUV: return Format.AYUV;
                //case PixelFormat.Y410: return Format.Y410;
                //case PixelFormat.Y416: return Format.Y416;
                //case PixelFormat.NV12: return Format.NV12;
                //case PixelFormat.P010: return Format.P010;
                //case PixelFormat.P016: return Format.P016;
                //case PixelFormat.Opaque420: return Format.Opaque420;
                //case PixelFormat.YUY2: return Format.YUY2;
                //case PixelFormat.Y210: return Format.Y210;
                //case PixelFormat.Y216: return Format.Y216;
                //case PixelFormat.NV11: return Format.NV11;
                //case PixelFormat.AI44: return Format.AI44;
                //case PixelFormat.IA44: return Format.IA44;
                //case PixelFormat.P8: return Format.P8;
                //case PixelFormat.A8P8: return Format.A8P8;
                //case PixelFormat.B4G4R4A4_UNorm: return Format.B4G4R4A4_UNorm;
            }
        }

        public static PixelFormat ToPixelFormat(this Format format)
        {
            switch(format)
            {
                default: return PixelFormat.Unknown;
                //case Format.R32G32B32A32_Typeless: return PixelFormat.R32G32B32A32_Typeless;
                case Format.R32G32B32A32_Float: return PixelFormat.R32G32B32A32_Float;
                //case Format.R32G32B32A32_UInt: return PixelFormat.R32G32B32A32_UInt;
                //case Format.R32G32B32A32_SInt: return PixelFormat.R32G32B32A32_SInt;
                //case Format.R32G32B32_Typeless: return PixelFormat.R32G32B32_Typeless;
                //case Format.R32G32B32_Float: return PixelFormat.R32G32B32_Float;
                //case Format.R32G32B32_UInt: return PixelFormat.R32G32B32_UInt;
                //case Format.R32G32B32_SInt: return PixelFormat.R32G32B32_SInt;
                //case Format.R16G16B16A16_Typeless: return PixelFormat.R16G16B16A16_Typeless;
                //case Format.R16G16B16A16_Float: return PixelFormat.R16G16B16A16_Float;
                //case Format.R16G16B16A16_UNorm: return PixelFormat.R16G16B16A16_UNorm;
                //case Format.R16G16B16A16_UInt: return PixelFormat.R16G16B16A16_UInt;
                //case Format.R16G16B16A16_SNorm: return PixelFormat.R16G16B16A16_SNorm;
                //case Format.R16G16B16A16_SInt: return PixelFormat.R16G16B16A16_SInt;
                //case Format.R32G32_Typeless: return PixelFormat.R32G32_Typeless;
                //case Format.R32G32_Float: return PixelFormat.R32G32_Float;
                //case Format.R32G32_UInt: return PixelFormat.R32G32_UInt;
                //case Format.R32G32_SInt: return PixelFormat.R32G32_SInt;
                //case Format.R32G8X24_Typeless: return PixelFormat.R32G8X24_Typeless;
                //case Format.D32_Float_S8X24_UInt: return PixelFormat.D32_Float_S8X24_UInt;
                //case Format.R32_Float_X8X24_Typeless: return PixelFormat.R32_Float_X8X24_Typeless;
                //case Format.X32_Typeless_G8X24_UInt: return PixelFormat.X32_Typeless_G8X24_UInt;
                //case Format.R10G10B10A2_Typeless: return PixelFormat.R10G10B10A2_Typeless;
                //case Format.R10G10B10A2_UNorm: return PixelFormat.R10G10B10A2_UNorm;
                //case Format.R10G10B10A2_UInt: return PixelFormat.R10G10B10A2_UInt;
                //case Format.R11G11B10_Float: return PixelFormat.R11G11B10_Float;
                //case Format.R8G8B8A8_Typeless: return PixelFormat.R8G8B8A8_Typeless;
                case Format.R8G8B8A8_UNorm: return PixelFormat.R8G8B8A8_UNorm;
                //case Format.R8G8B8A8_UNorm_SRgb: return PixelFormat.R8G8B8A8_UNorm_SRgb;
                //case Format.R8G8B8A8_UInt: return PixelFormat.R8G8B8A8_UInt;
                //case Format.R8G8B8A8_SNorm: return PixelFormat.R8G8B8A8_SNorm;
                //case Format.R8G8B8A8_SInt: return PixelFormat.R8G8B8A8_SInt;
                //case Format.R16G16_Typeless: return PixelFormat.R16G16_Typeless;
                //case Format.R16G16_Float: return PixelFormat.R16G16_Float;
                //case Format.R16G16_UNorm: return PixelFormat.R16G16_UNorm;
                //case Format.R16G16_UInt: return PixelFormat.R16G16_UInt;
                //case Format.R16G16_SNorm: return PixelFormat.R16G16_SNorm;
                //case Format.R16G16_SInt: return PixelFormat.R16G16_SInt;
                //case Format.R32_Typeless: return PixelFormat.R32_Typeless;
                //case Format.D32_Float: return PixelFormat.D32_Float;
                //case Format.R32_Float: return PixelFormat.R32_Float;
                //case Format.R32_UInt: return PixelFormat.R32_UInt;
                //case Format.R32_SInt: return PixelFormat.R32_SInt;
                //case Format.R24G8_Typeless: return PixelFormat.R24G8_Typeless;
                //case Format.D24_UNorm_S8_UInt: return PixelFormat.D24_UNorm_S8_UInt;
                //case Format.R24_UNorm_X8_Typeless: return PixelFormat.R24_UNorm_X8_Typeless;
                //case Format.X24_Typeless_G8_UInt: return PixelFormat.X24_Typeless_G8_UInt;
                //case Format.R8G8_Typeless: return PixelFormat.R8G8_Typeless;
                //case Format.R8G8_UNorm: return PixelFormat.R8G8_UNorm;
                //case Format.R8G8_UInt: return PixelFormat.R8G8_UInt;
                //case Format.R8G8_SNorm: return PixelFormat.R8G8_SNorm;
                //case Format.R8G8_SInt: return PixelFormat.R8G8_SInt;
                //case Format.R16_Typeless: return PixelFormat.R16_Typeless;
                //case Format.R16_Float: return PixelFormat.R16_Float;
                //case Format.D16_UNorm: return PixelFormat.D16_UNorm;
                //case Format.R16_UNorm: return PixelFormat.R16_UNorm;
                //case Format.R16_UInt: return PixelFormat.R16_UInt;
                //case Format.R16_SNorm: return PixelFormat.R16_SNorm;
                //case Format.R16_SInt: return PixelFormat.R16_SInt;
                //case Format.R8_Typeless: return PixelFormat.R8_Typeless;
                //case Format.R8_UNorm: return PixelFormat.R8_UNorm;
                //case Format.R8_UInt: return PixelFormat.R8_UInt;
                //case Format.R8_SNorm: return PixelFormat.R8_SNorm;
                //case Format.R8_SInt: return PixelFormat.R8_SInt;
                //case Format.A8_UNorm: return PixelFormat.A8_UNorm;
                //case Format.R1_UNorm: return PixelFormat.R1_UNorm;
                //case Format.R9G9B9E5_Sharedexp: return PixelFormat.R9G9B9E5_Sharedexp;
                //case Format.R8G8_B8G8_UNorm: return PixelFormat.R8G8_B8G8_UNorm;
                //case Format.G8R8_G8B8_UNorm: return PixelFormat.G8R8_G8B8_UNorm;
                //case Format.BC1_Typeless: return PixelFormat.BC1_Typeless;
                //case Format.BC1_UNorm: return PixelFormat.BC1_UNorm;
                //case Format.BC1_UNorm_SRgb: return PixelFormat.BC1_UNorm_SRgb;
                //case Format.BC2_Typeless: return PixelFormat.BC2_Typeless;
                //case Format.BC2_UNorm: return PixelFormat.BC2_UNorm;
                //case Format.BC2_UNorm_SRgb: return PixelFormat.BC2_UNorm_SRgb;
                //case Format.BC3_Typeless: return PixelFormat.BC3_Typeless;
                //case Format.BC3_UNorm: return PixelFormat.BC3_UNorm;
                //case Format.BC3_UNorm_SRgb: return PixelFormat.BC3_UNorm_SRgb;
                //case Format.BC4_Typeless: return PixelFormat.BC4_Typeless;
                //case Format.BC4_UNorm: return PixelFormat.BC4_UNorm;
                //case Format.BC4_SNorm: return PixelFormat.BC4_SNorm;
                //case Format.BC5_Typeless: return PixelFormat.BC5_Typeless;
                //case Format.BC5_UNorm: return PixelFormat.BC5_UNorm;
                //case Format.BC5_SNorm: return PixelFormat.BC5_SNorm;
                //case Format.B5G6R5_UNorm: return PixelFormat.B5G6R5_UNorm;
                //case Format.B5G5R5A1_UNorm: return PixelFormat.B5G5R5A1_UNorm;
                //case Format.B8G8R8A8_UNorm: return PixelFormat.B8G8R8A8_UNorm;
                //case Format.B8G8R8X8_UNorm: return PixelFormat.B8G8R8X8_UNorm;
                //case Format.R10G10B10_Xr_Bias_A2_UNorm: return PixelFormat.R10G10B10_Xr_Bias_A2_UNorm;
                //case Format.B8G8R8A8_Typeless: return PixelFormat.B8G8R8A8_Typeless;
                //case Format.B8G8R8A8_UNorm_SRgb: return PixelFormat.B8G8R8A8_UNorm_SRgb;
                //case Format.B8G8R8X8_Typeless: return PixelFormat.B8G8R8X8_Typeless;
                //case Format.B8G8R8X8_UNorm_SRgb: return PixelFormat.B8G8R8X8_UNorm_SRgb;
                //case Format.BC6H_Typeless: return PixelFormat.BC6H_Typeless;
                //case Format.BC6H_Uf16: return PixelFormat.BC6H_Uf16;
                //case Format.BC6H_Sf16: return PixelFormat.BC6H_Sf16;
                //case Format.BC7_Typeless: return PixelFormat.BC7_Typeless;
                //case Format.BC7_UNorm: return PixelFormat.BC7_UNorm;
                //case Format.BC7_UNorm_SRgb: return PixelFormat.BC7_UNorm_SRgb;
                //case Format.AYUV: return PixelFormat.AYUV;
                //case Format.Y410: return PixelFormat.Y410;
                //case Format.Y416: return PixelFormat.Y416;
                //case Format.NV12: return PixelFormat.NV12;
                //case Format.P010: return PixelFormat.P010;
                //case Format.P016: return PixelFormat.P016;
                //case Format.Opaque420: return PixelFormat.Opaque420;
                //case Format.YUY2: return PixelFormat.YUY2;
                //case Format.Y210: return PixelFormat.Y210;
                //case Format.Y216: return PixelFormat.Y216;
                //case Format.NV11: return PixelFormat.NV11;
                //case Format.AI44: return PixelFormat.AI44;
                //case Format.IA44: return PixelFormat.IA44;
                //case Format.P8: return PixelFormat.P8;
                //case Format.A8P8: return PixelFormat.A8P8;
                //case Format.B4G4R4A4_UNorm: return PixelFormat.B4G4R4A4_UNorm;
            }
        }
    }
}
