//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FreeLookCamera.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FreeLookCamera.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture2D ShaderTexture0 : register(t0);
        ///Texture2D ShaderTexture1 : register(t1);
        ///Texture2D ShaderTexture2 : register(t2);
        ///Texture2D ShaderTexture3 : register(t3);
        ///Texture2D ShaderTexture4 : register(t4);
        ///
        ///SamplerState Sampler : register(s0);
        ///
        ///struct VOut
        ///{
        ///	float4 position : SV_POSITION;
        ///	float2 texcoord: TEXCOORD;
        ///	int tex: CUSTOM;
        ///};
        ///
        ///float4 PSMain(VOut input) : SV_Target
        ///{
        ///	float4 color;
        ///	[flatten]
        ///	switch (input.tex)
        ///	{
        ///	case 1:
        ///		color = ShaderTexture1.Sample(Sampler, input.texco [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PixelShader {
            get {
                return ResourceManager.GetString("PixelShader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cbuffer ViewData : register(b0)
        ///{
        ///	float4x4 view;
        ///	float4x4 projection;
        ///	float secondsElapsed;
        ///}
        ///
        ///struct VOut
        ///{
        ///	float4 position : SV_POSITION;
        ///	float2 texcoord: TEXCOORD;
        ///	int tex : CUSTOM;
        ///};
        ///
        ///struct VIn
        ///{
        ///	float4 position: POSITION;
        ///	float4 color: COLOR;
        ///	float2 texcoord: TEXCOORD;
        ///	float2 pad0: PADDING0;
        ///
        ///	// instance data
        ///	float4 cubePosition: CUSTOM0;
        ///	float4 cubeRotation: CUSTOM1;
        ///	float4 cubeScale: CUSTOM2;
        ///	int tex: CUSTOM3;
        ///	float3 pad1: PADDING1;
        ///};
        ///
        ///static float PI = [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VertexShader {
            get {
                return ResourceManager.GetString("VertexShader", resourceCulture);
            }
        }
    }
}
